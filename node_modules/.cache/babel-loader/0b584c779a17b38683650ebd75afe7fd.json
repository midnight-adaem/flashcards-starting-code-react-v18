{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\curgo\\\\OneDrive\\\\Documents\\\\Coding\\\\CodeAcademy\\\\Full-Stack-Engineer\\\\flashcards-starting-code-react-v18\\\\src\\\\components\\\\NewQuizForm.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\n// import selectors\n\nexport default function NewQuizForm() {\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const navigate = useNavigate();\n  const topics = {}; // Replace with topics \n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n    const cardIds = [];\n\n    // create the new cards here and add each card's id to cardIds\n    // create the new quiz here\n\n    const quizId = uuidv4();\n\n    // dispatch add quiz action \n\n    navigate(ROUTES.quizzesRoute());\n  };\n  const addCardInputs = e => {\n    e.preventDefault();\n    setCards(cards.concat({\n      front: \"\",\n      back: \"\"\n    }));\n  };\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i));\n  };\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value;\n    setCards(newCards);\n  };\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Create a new quiz\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"quiz-name\",\n    value: name,\n    onChange: e => setName(e.currentTarget.value),\n    placeholder: \"Quiz Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"quiz-topic\",\n    onChange: e => setTopicId(e.currentTarget.value),\n    placeholder: \"Topic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Topic\"), Object.values(topics).map(topic => /*#__PURE__*/React.createElement(\"option\", {\n    key: topic.id,\n    value: topic.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, topic.name))), cards.map((card, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"card-front-back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: `card-front-${index}`,\n    value: cards[index].front,\n    onChange: e => updateCardState(index, \"front\", e.currentTarget.value),\n    placeholder: \"Front\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: `card-back-${index}`,\n    value: cards[index].back,\n    onChange: e => updateCardState(index, \"back\", e.currentTarget.value),\n    placeholder: \"Back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => removeCard(e, index),\n    className: \"remove-card-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Remove Card\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actions-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addCardInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Add a Card\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Create Quiz\"))));\n}","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useNavigate","v4","uuidv4","ROUTES","NewQuizForm","name","setName","cards","setCards","topicId","setTopicId","navigate","topics","dispatch","handleSubmit","e","preventDefault","length","cardIds","quizId","quizzesRoute","addCardInputs","concat","front","back","removeCard","index","filter","card","i","updateCardState","side","value","newCards","slice","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","onChange","currentTarget","placeholder","Object","values","map","topic","key","className","onClick","type"],"sources":["C:/Users/curgo/OneDrive/Documents/Coding/CodeAcademy/Full-Stack-Engineer/flashcards-starting-code-react-v18/src/components/NewQuizForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\n// import selectors\n\nexport default function NewQuizForm() {\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const navigate = useNavigate();\n  const topics = {};  // Replace with topics \n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n\n    const cardIds = [];\n\n    // create the new cards here and add each card's id to cardIds\n    // create the new quiz here\n\n    const quizId = uuidv4();\n\n    // dispatch add quiz action \n\n    navigate(ROUTES.quizzesRoute())\n  };\n\n  const addCardInputs = (e) => {\n    e.preventDefault();\n    setCards(cards.concat({ front: \"\", back: \"\" }));\n  };\n\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i));\n  };\n\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value;\n    setCards(newCards);\n  };\n\n  return (\n    <section>\n      <h1>Create a new quiz</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          id=\"quiz-name\"\n          value={name}\n          onChange={(e) => setName(e.currentTarget.value)}\n          placeholder=\"Quiz Title\"\n        />\n        <select\n          id=\"quiz-topic\"\n          onChange={(e) => setTopicId(e.currentTarget.value)}\n          placeholder=\"Topic\"\n        >\n          <option value=\"\">Topic</option>\n          {Object.values(topics).map((topic) => (\n            <option key={topic.id} value={topic.id}>\n              {topic.name}\n            </option>\n          ))}\n        </select>\n        {cards.map((card, index) => (\n          <div key={index} className=\"card-front-back\">\n            <input\n              id={`card-front-${index}`}\n              value={cards[index].front}\n              onChange={(e) =>\n                updateCardState(index, \"front\", e.currentTarget.value)\n              }\n              placeholder=\"Front\"\n            />\n\n            <input\n              id={`card-back-${index}`}\n              value={cards[index].back}\n              onChange={(e) =>\n                updateCardState(index, \"back\", e.currentTarget.value)\n              }\n              placeholder=\"Back\"\n            />\n\n            <button\n              onClick={(e) => removeCard(e, index)}\n              className=\"remove-card-button\"\n            >\n              Remove Card\n            </button>\n          </div>\n        ))}\n        <div className=\"actions-container\">\n          <button onClick={addCardInputs}>Add a Card</button>\n          <button type=\"submit\">Create Quiz</button>\n        </div>\n      </form>\n    </section>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}